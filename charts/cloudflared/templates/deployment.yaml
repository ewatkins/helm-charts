{{- if .Values.deployment.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default (include "cloudflared.fullname" .) .Values.deployment.name }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "cloudflared.labels" . | nindent 4 }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{ if .Values.customLabels }}
{{ toYaml .Values.customLabels | indent 4 }}
{{- end }}
  {{- if or .Values.deployment.annotations .Values.customAnnotations }}
  annotations:
    {{- if .Values.customAnnotations }}
    {{- toYaml .Values.customAnnotations | nindent 4 }}
    {{- end }}
    {{- if .Values.deployment.annotations }}
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if and (not .Values.autoscaler.enabled) (not .Values.hpa.enabled) }}
  replicas: {{ include "cloudflared.replicaCount"}}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    {{- if .Values.deployment.selector }}
    {{- toYaml .Values.deployment.selector | nindent 4 }}
    {{- else }}
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/name: {{ template "cloudflared.name" . }}
    {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "cloudflared.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
{{- if .Values.customLabels }}
{{ toYaml .Values.customLabels | indent 8 }}
{{- end }}
      annotations:
{{- if .Values.podAnnotations }}
{{- toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds}}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      serviceAccountName: {{ template "cloudflared.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ tpl (toYaml .Values.topologySpreadConstraints) $ | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if not (empty .Values.image.pullSecrets) }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: "cloudflared"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "tunnel", "--config", "/etc/cloudflared/config/config.yaml", "run", "$(TUNNEL_ID)" ]
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: credentials
              mountPath: /etc/cloudflared/creds/credentials.json
              subPath: credentials.json
              readOnly: true
{{- range .Values.extraSecrets }}
            - name: {{ .name }}
                mountPath: {{ .mountPath }}
                readOnly: true
{{- end }}
{{- if .Values.extraVolumeMounts }}
{{- toYaml .Values.extraVolumeMounts | nindent 12}}
{{- end }}
          env:
            - name: TUNNEL_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.creds.name }}
                  key: TUNNEL_ID
            - name: TUNNEL_CRED_FILE
              value: /etc/cloudflared/creds/credentials.json
{{- if .Values.env }}          
{{- toYaml .Values.env | nindent 12}}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
{{- if .Values.securityContext }}
        securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
{{- end }}
{{- if .Values.extraContainers }}
{{ toYaml .Values.extraContainers | indent 8 }}
{{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.config.name }}
            defaultMode: 420
        - name: credentials
          secret:
            secretName: {{ .Values.creds.name }}
            defaultMode: 400
{{- range .Values.extraSecrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ .name }}
            defaultMode: {{ default 400 .defaultMode }}
{{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
{{- end }}
