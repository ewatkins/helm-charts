{{- if .Values.deployment.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default (include "cloudflared.fullname" .) .Values.deployment.name }}
  namespace: {{ .Release.Namespace }}
  labels: 
    {{- include "cloudflared.labels" . | nindent 4 }}
    {{- if .Values.deployment.labels }}
    {{ toYaml .Values.deployment.labels | nindent 4 }}
    {{- end }}
    {{- if .Values.global.commonLabels }}
    {{ toYaml .Values.global.commonLabels | nindent 4 }}
    {{- end }}

  {{- if or .Values.deployment.annotations .Values.global.commonAnnotations }}
  annotations:
    {{- if .Values.deployment.annotations }}
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
    {{- if .Values.global.commonAnnotations }}
    {{- toYaml .Values.global.commonAnnotations | nindent 4 }}
    {{- end }}
  {{- end }}

spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      {{- include "cloudflared.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cloudflared.labels" . | nindent 8 }}
        {{- if .Values.pod.labels }}
        {{ toYaml .Values.pod.labels | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonLabels }}
        {{ toYaml .Values.global.commonLabels | nindent 8 }}
        {{- end }}

      {{- if or .Values.pod.annotations .Values.global.commonAnnotations }}
      annotations:
        {{- if .Values.pod.annotations }}
        {{- toYaml .Values.pod.annotations | nindent 8 }}
        {{- end }}
        {{- if .Values.global.commonAnnotations }}
        {{- toYaml .Values.global.commonAnnotations | nindent 8 }}
        {{- end }}
      {{- end }}

    spec:
      {{- with default .Values.securityContext .Values.pod.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}

      serviceAccountName: {{ template "cloudflared.serviceAccountName" . }}
      
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}    

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}

      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 }}
      {{- end }}

      {{- with default .Values.image.pullSecrets .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml . | indent 8 }}
      {{- end }}

      {{- if .Values.extraInitContainers }}
      initContainers:
      {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}

      containers:
        - name: "cloudflared"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          args:          
          {{ range .Values.args }}
            - {{ . }}
          {{ end }}

          volumeMounts:
              - name: config
                mountPath: /etc/cloudflared/config/{{ .Values.config.key }}
                subPath: {{ .Values.config.key }}
                readOnly: true

              - name: credentials
                mountPath: /etc/cloudflared/creds/{{ .Values.credentials.key }}
                subPath: {{ .Values.credentials.key }}
                readOnly: true

            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12}}
            {{- end }}
          
          env:
            - name: TUNNEL_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.tunnel_id.secretName }}
                  key: {{ .Values.tunnel_id.key }}

            - name: TUNNEL_CRED_FILE
              value: /etc/cloudflared/creds/{{ .Values.credentials.key }}

            {{- if .Values.extraEnv }}  
            {{- toYaml .Values.extraEnv | nindent 12}}
            {{- end }}
          
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{ toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{ toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.startupProbe }}
          startupProbe:
            {{ toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | indent 8 }}
        {{- end }}

      volumes:
        - name: config
          configMap:
            name: {{ .Values.config.name }}

        - name: credentials
          secret:
            secretName: {{ .Values.credentials.secretName }}

        {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | indent 8 }}
        {{- end }}

{{- end }}