# Default values for cloudflared.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  commonLabels: {}
  commonAnnotations: {}

nameOverride: ""
fullnameOverride: ""

replicaCount: 2

image:
  repository: cloudflare/cloudflared
  tag: 2024.11.1
  pullPolicy: IfNotPresent
  pullSecrets: []

imagePullSecrets: []

deployment:
  enabled: true
  name: ""
  replicaCount: 1

  labels: {}
  annotations: {}
  selector: {}

  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

service:
  enabled: true
  # -- Service name.
  name: ""

  # -- Service type.
  type: ClusterIP

  # -- Service labels.
  labels: {}
  # -- Service annotations.
  annotations: {}
  # -- Service selector.
  selector: {}

  # -- Default port.
  port: 8081

  # -- Additional ports to expose.
  # @default -- See _values.yaml_
  additionalPorts: []

pod:
  labels: {}
  annotations: {}
  securityContext: {}

securityContext: {}

terminationGracePeriodSeconds:

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   requests:
#     cpu: 100m
#     memory: 128Mi
#   limits:
#     cpu: 100m
#     memory: 128Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Labels to add to the service account
  labels: {}
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  automountToken: false

priorityClassName: ""

args:
  [
    "tunnel",
    "--config",
    "/etc/cloudflared/config/config.yaml",
    "run",
    "$(TUNNEL_ID)",
  ]

credentials:
  create: false
  secretName: ""
  key: ""
  value: ""

tunnel_id:
  create: false
  secretName: ""
  key: ""
  value: ""

config:
  create: false
  name: ""
  key: ""
  value: ""

extraVolumes: []

# optional array of extra volume mounts inside cloudflared container
extraVolumeMounts: []
# - name: ""
#   mountPath: ""
#   subPath: ""
#   readOnly: true | false

# extra env variables for the cloudflared container
extraEnv: []
# - name: ""
#   value: ""

## Liveness, readiness and startup probes
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3
  # -- Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 5
  # -- How often (in seconds) to perform the [probe]
  periodSeconds: 10
  # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  # -- Number of seconds after which the [probe] times out
  timeoutSeconds: 1
  ## Probe configuration
  httpGet:
    path: /healthy
    port: 8080

readinessProbe:
  # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 3
  # -- Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 5
  # -- How often (in seconds) to perform the [probe]
  periodSeconds: 10
  # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  # -- Number of seconds after which the [probe] times out
  timeoutSeconds: 1
  ## Probe configuration
  httpGet:
    path: /ready
    port: 8080

startupProbe:
  # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
  failureThreshold: 60
  # -- Number of seconds after the container has started before [probe] is initiated
  initialDelaySeconds: 5
  # -- How often (in seconds) to perform the [probe]
  periodSeconds: 10
  # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
  successThreshold: 1
  # -- Number of seconds after which the [probe] times out
  timeoutSeconds: 1
  ## Probe configuration
  httpGet:
    path: /healthy
    port: 8080

extraInitContainers: []

extraContainers: []

nodeSelector: {}
affinity: {}
topologySpreadConstraints: []
tolerations: []
