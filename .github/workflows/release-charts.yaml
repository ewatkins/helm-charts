---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Subflow: Release Charts"

on:
  workflow_call:
    inputs:
      chartsToRelease:
        required: false
        type: string
        default: ""
    secrets:
      BOT_APP_ID:
        description: The App ID of the GitHub App
        required: true
      BOT_APP_PRIVATE_KEY:
        description: The private key of the GitHub App
        required: true

permissions:
  contents: write
  packages: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.vars.outputs.charts }}
    steps:
      - name: Create an array of charts
        id: vars
        run: echo "charts=$(jq 'split(",")' -Rc <(echo '${{ inputs.chartsToRelease }}'))" >> $GITHUB_OUTPUT

      - name: Install Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: v3.16.3 # renovate: datasource=github-releases depName=helm packageName=helm/helm

  publish-to-ghcr:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charts: ${{ fromJson(needs.setup.outputs.charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Set Chart Name, Version, and Repository
        id: set-variables
        run: |
          echo "CHART=$(yq -r .name ./${{ matrix.charts }}/Chart.yaml)" >> $GITHUB_ENV
          echo "VERSION=$(yq -r .version ./${{ matrix.charts }}/Chart.yaml)" >> $GITHUB_ENV
          echo "REPOSITORY=${REPO,,}" >> $GITHUB_ENV
          echo $CHART
          echo $VERSION
          echo $REPOSITORY
        env:
          REPO: ${{ github.repository }}

      - name: Login to Github Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Package Helm Chart
        run: |
          helm package ./${{ matrix.charts }} --version ${{ env.VERSION }}

      - name: Push Helm Chart to Github Container Registry
        run: |
          helm push ${{ env.CHART}}-${{ env.VERSION }}.tgz oci://ghcr.io/${{ env.REPOSITORY }}

  publish-to-gh-pages:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        charts: ${{ fromJson(needs.setup.outputs.charts) }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1.11.5
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
   
      - name: Build chart dependencies
        run: |
          for dir in charts/*/
          do
              (cd ${dir}; helm dependency build)
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          version: v1.6.1 # renovate: datasource=github-releases depName=helm packageName=helm/chart-releaser-action
        env:
          CR_TOKEN: "${{ steps.app-token.outputs.token }}"
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true
          CR_CHARTS_DIR: ${{ matrix.charts }}